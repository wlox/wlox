var benchmark = require('benchmark')
benchmark.options.minTime = 1

var fixtures = require('../test/fixtures')

var local = require('../')
var npm = require('typeforce')

fixtures.valid.forEach(function(f) {
  if (f.type === "Buffer") return
  if (f.custom) return

	var suite = new benchmark.Suite()

  local(f.type, f.value)
	suite.add('local#' + JSON.stringify(f.type), function() {
		local(f.type, f.value)
	})

  try {
    npm(f.type, f.value)

	  suite.add('npm#' + JSON.stringify(f.type), function() {
        npm(f.type, f.value)
	  })
  } catch (e) {}

	suite.add('local#' + JSON.stringify(f.type), function() {
		local(f.type, f.value)
	})

  try {
    npm(f.type, f.value)

	  suite.add('npm#' + JSON.stringify(f.type), function() {
        npm(f.type, f.value)
	  })
  } catch (e) {}

	// after each cycle
	suite.on('cycle', function (event) {
		console.log('*', String(event.target))
	})

	// other handling
	suite.on('complete', function() {
		console.log('')
		console.log('Fastest is ' + this.filter('fastest').pluck('name'));
	})

	suite.on('error', function(event) {
		throw event.target.error
	})

	suite.run()
})
